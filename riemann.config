; -*- mode: clojure; -*-
; vim: filetype=clojure

;(logging/init :file "/var/log/riemann/riemann.log")

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "127.0.0.1"]
  (tcp-server :host host)
  (udp-server :host host)
  (repl-server :host host :port 12345)
  (ws-server  :host host))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(require '[riemann-enhancements.core :as magic])

; Keep events in the index for 5 minutes by default.
(let [index (default :ttl 300 (update-index (index)))]

  ; Inbound events will be passed to these streams:
  (streams

    ; Index all events immediately.
    index

    (where (service "memory")
      prn)

    (magic/log-to-datomic "datomic:free://localhost:4334/metrics")

    ; Calculate an overall rate of events.
    (with {:metric 1 :host nil :state "ok" :service "events/sec"}
      (rate 5 index))

    ; Log expired events.
    (expired
      (fn [event] (info "expired" event)))
))

;(magic/start-server "datomic:mem://metrics" 8000)
